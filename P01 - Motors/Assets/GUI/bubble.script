spriteActive = true

local M = {}

local h_size = hash("size")

local no_padding = {
	left = 0,
	right = 0,
	bottom = 0,
	top = 0,
}

function M.pick_sprite(sprite_url, x, y, padding)
	local transform = go.get_world_transform(sprite_url)
	local pos = vmath.inv(transform) * vmath.vector4(x, y, 0, 1)
	x, y = pos.x, pos.y

	local size = go.get(sprite_url, h_size)
	padding = padding or no_padding

	local half_width = size.x * 0.5
	local left = -half_width - padding.left
	local right = half_width + padding.right
	if x < left or x > right then return false end

	local half_height = size.y * 0.5
	local top = half_height + padding.top
	local bottom = -half_height - padding.bottom
	if y < bottom or y > top then return false end

	return true
end




function init(self)
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)	
	
	if action_id == hash("mouse_left") then
		if M.pick_sprite("#bubbleSprite", action.x, action.y, no_padding) then
			if action.pressed then

				if spriteActive == true then
					msg.post("#bubbleSprite", "disable")
					spriteActive = false
				else 
					msg.post("#bubbleSprite", "enable")
					spriteActive = true
				end

			end
		end
		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
